@implements IDisposable

@inject NavigationManager NavigationManager

<MudNavMenu>
    <MudNavLink Href="" IconColor="Color.Primary" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
    <AuthorizeView>
        <Authorized>
            <MudNavLink 
                Href="Dashboard" 
                Match="NavLinkMatch.Prefix" 
                Icon="@Icons.Material.Filled.Dashboard"
                IconColor="Color.Primary">
                Dashboard
            </MudNavLink>
             <MudNavLink 
                Href="Dashboard/Activity" 
                Match="NavLinkMatch.Prefix" 
                Icon="@Icons.Material.Filled.Hiking"
                IconColor="Color.Primary">
                Activity
            </MudNavLink>
            <MudNavLink 
                Href="Dashboard/Community" 
                Match="NavLinkMatch.Prefix"
                Icon="@Icons.Material.Filled.Groups"
                IconColor="Color.Primary">
                Community
            </MudNavLink>
            <MudNavLink 
                Href="Dashboard/Reviews" 
                Match="NavLinkMatch.Prefix" 
                Icon="@Icons.Material.Filled.RateReview"
                IconColor="Color.Primary">
                Peer Reviews
            </MudNavLink>
            <MudNavLink 
                Href="Dashboard/Leaderboard" 
                Match="NavLinkMatch.Prefix" 
                Icon="@Icons.Material.Filled.Leaderboard"
                IconColor="Color.Primary">
                Leaderboard
            </MudNavLink>
            <MudNavLink 
                Href="Dashboard/Roadmap" 
                Match="NavLinkMatch.Prefix" 
                Icon="@Icons.Material.Filled.Map"
                IconColor="Color.Primary">
                Roadmap
            </MudNavLink>
            <MudNavLink 
                Href="Dashboard/Courses" 
                Match="NavLinkMatch.Prefix" 
                Icon="@Icons.Material.Filled.LibraryBooks"
                IconColor="Color.Primary">
                Courses
            </MudNavLink>
            <MudNavLink 
                Href="Articles/articles" 
                Match="NavLinkMatch.Prefix" 
                Icon="@Icons.Material.Filled.Newspaper"
                IconColor="Color.Primary">
                Articles
            </MudNavLink>
            <MudNavLink 
                Href="Articles/blog" 
                Match="NavLinkMatch.Prefix" 
                Icon="@Icons.Material.Filled.Book"
                IconColor="Color.Primary">
                Blog
            </MudNavLink>
            <MudNavLink Href="Dashboard/profile"
                        Match="NavLinkMatch.Prefix"
                        Icon="@Icons.Material.Filled.VerifiedUser"
                        IconColor="Color.Primary">
                Profile
            </MudNavLink>
            @* <MudNavLink Href="Account/Manage" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Person">@context.User.Identity?.Name</MudNavLink> *@
            <form action="Account/Logout" method="post">
                <AntiforgeryToken />
                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                <button type="submit" class="mud-nav-link mud-ripple">
                    <MudIcon 
                        Icon="@Icons.Material.Filled.Logout" Color="Color.Primary" Class="mr-3"></MudIcon> Logout
                </button>
            </form>
        </Authorized>
        <NotAuthorized>
            <MudNavLink Href="Account/Register" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Person">Register</MudNavLink>
            <MudNavLink Href="Account/Login" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Password">Login</MudNavLink>
        </NotAuthorized>
    </AuthorizeView>
    <AuthorizeView Roles="Admin">
        <MudNavLink Href="admin" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.List">Admin</MudNavLink>
    </AuthorizeView>
</MudNavMenu>


@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

