@page "/dashboard/Courses"
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims
@using TCSA.V2026.Data.Curriculum
@using TCSA.V2026.Data.DTOs
@using TCSA.V2026.Data.Models
@using TCSA.V2026.Data.Models.Responses
@using TCSA.V2026.Components.UI
@using TCSA.V2026.Helpers
@using TCSA.V2026.Services
@attribute [Authorize]
<MudDialogProvider />

<PageTitle>Activity</PageTitle>

<MudContainer>
    <DashboardToolBar></DashboardToolBar>

    @if (IsLoading)
    {
        <MudProgressCircular Color="Color.Default" Indeterminate="true" />
    }
    else
    {
        foreach(var course in CourseList)
        {
            <MudGrid>
                <MudItem xs="12" sm="6" md="4">
                    <MudCard>
                        <MudCardMedia Image="images/door.jpg" Height="200" />
                        <MudCardContent>
                            <MudText Typo="Typo.h5">@course.Title</MudText>
                            <MudText Typo="Typo.body2">@course.Description</MudText>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton OnClick="@(() => NavigateToCourse(course.Id))" Variant="Variant.Text" Color="Color.Primary">Go To Course</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            </MudGrid>
        }
    }
</MudContainer>

@code {
    [Inject] private NavigationManager Navigation { get; set; }
    [Inject] private AuthenticationStateProvider AuthenticationState { get; set; }  
    [Inject] private IUserService UserService { get; set; }

    private ApplicationUser User { get; set; }
    private List<Course> CourseList = CourseHelper.GetCourses();

    private bool IsLoading = true;
    private string UserId = string.Empty;
    private TimeSpan LoadTime = TimeSpan.Zero;

    protected override async Task OnInitializedAsync()
    {
        var startTime = DateTime.UtcNow;
        var authSate = await AuthenticationState.GetAuthenticationStateAsync();

        if (!authSate.User.Identity.IsAuthenticated)
        {
            Navigation.NavigateTo("Account/Login");
        }

        var claims = authSate.User;
        UserId = claims.FindFirstValue(ClaimTypes.NameIdentifier);
        User = await UserService.GetUserById(UserId);

        var user = await UserService.GetDetailedUserById(UserId);
        LoadTime = DateTime.UtcNow - startTime;

        IsLoading = false;
    }

    private void NavigateToCourse(int courseId)
    {
        var course = CourseList.Single(c => c.Id == courseId);
        var firstArticle = course.Articles.First();
        var isCode = true;
        Navigation.NavigateTo($"/course/{courseId}/article/{firstArticle.CourseDisplayId}/{firstArticle.Id}/{isCode}");
    }
}
